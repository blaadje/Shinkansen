{"version":3,"sources":["store/actions/actionTypes.js","store/actions/apiStatus.js","services/firebase.js","store/actions/auth.js","utils/useForm.js","utils/validateLoginForm.js","views/Login.js","components/Menu.js","components/hoc/requireAuth.js","components/GithubSearch.js","views/Dashboard.js","utils/index.js","components/DeployList.js","components/DeployActions.js","views/helpers.js","views/AppDetails.js","components/App.js","store/reducers/auth.js","store/reducers/apiStatus.js","store/reducers/octokit.js","store/reducers/index.js","store/index.js","index.js"],"names":["BEGIN_API_CALL","API_CALL_ERROR","SIGNUP_SUCCESS","SIGNIN_SUCCESS","SIGNOUT_SUCCESS","RESET_SUCCESS","beginApiCall","type","apiCallError","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","loadOctokit","token","payload","signup","email","password","dispatch","regenerator_default","a","async","_context","prev","next","awrap","auth","createUserWithEmailAndPassword","onAuthStateChanged","user","sendEmailVerification","database","ref","uid","set","displayName","photoURL","emailVerified","phoneNumber","isAnonymous","t0","stop","signin","callback","_context2","signInWithEmailAndPassword","then","_ref","console","log","catch","err","signout","_context3","signOut","resetPassword","_context4","sendPasswordResetEmail","useForm","loginFunction","validate","isReset","_useState","useState","_useState2","Object","slicedToArray","errors","setErrors","_useState3","_useState4","credentials","setCredentials","_useState5","_useState6","isSubmitting","setIsSubmitting","useEffect","keys","length","e","persist","objectSpread2","defineProperty","target","name","value","preventDefault","emailIsEmpty","test","emailFormatInvalid","passIsEmpty","match","passIsStrong","useStyles","makeStyles","theme","form","paddingBottom","spacing","divider","position","overflow","&:after","content","color","background","padding","top","left","transform","connect","state","userId","firebaseReducer","authMsg","authReducer","loading","apiStatusReducer","apiCallsInProgress","history","classes","newUser","setNewUser","reset","SetReset","useFirebase","_useForm","push","_useForm2","handleChange","handleSubmit","react_default","createElement","Box","style","height","display","justifyContent","alignItems","Card","p","pb","width","Typography","variant","Button","onClick","response","login","provider","scopes","sent","abrupt","updateProfile","additionalUserInfo","accessToken","credential","startIcon","GitHub_default","paddingY","Divider","className","onSubmit","noValidate","FormGroup","TextField","error","id","placeholder","helperText","defaultValue","onChange","InputProps","startAdornment","InputAdornment","AccountCircle_default","autoComplete","VpnKey_default","CircularProgress","bgcolor","borderTop","component","menu","boxShadow","borderBottom","concat","palette","secondary","main","menuButton","marginRight","title","sectionDesktop","marginLeft","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","isMenuOpen","Boolean","menuId","renderMenu","Menu_Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","AppBar","Toolbar","IconButton","edge","aria-label","Menu_default","noWrap","aria-controls","aria-haspopup","event","currentTarget","requireAuth","ChildComponent","props","isLoaded","isEmpty","root","flexDirection","backgroundColor","paper","listItem","&:hover","cursor","container","checkedIcon","fill","_state$firebaseReduce","_state$firebaseReduce2","profile","username","octokit","octokitReducer","connectedApps","repos","setRepos","_ref2","data","list","sort","getRepos","List","map","repo","isConnected","some","_ref3","ListItem","key","button","Container","maxWidth","ListItemIcon","CheckCircleOutlineOutlined_default","BookOutlined_default","ListItemText","primary","disabled","createHook","owner","events","config","url","content_type","secret","handleListItemClick","light","icon","link","textDecoration","inputRoot","inputInput","transition","transitions","create","breakpoints","up","search","borderRadius","shape","border","dark","searchIcon","pointerEvents","compose","useFirebaseConnect","applications","useSelector","applicationsArray","entries","reduce","acc","_ref4","index","application","toConsumableArray","undefined","Fragment","Breadcrumbs","react_router_dom","to","endIcon","UnfoldMore_default","Popper","placement","components_GithubSearch","pt","Search_default","InputBase","input","inputProps","_ref5","Lens_default","sortArrayWithDates","array","by","arguments","b","Date","getTime","isStatusLoading","status","includes","listItemIcon","minWidth","inline","fontWeight","skeleton","loader","blueLink","DeployList","deployments","deployment","orderedStatus","deployStatus","date","created_at","formattedDate","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","getStatusColor","CheckCircle_default","htmlColor","Error_default","LinearProgress","ListItemAvatar","Avatar","src","creator","avatar_url","Skeleton","animation","info","tag","DeployActions","currentVersion","previousVersion","handleDeploy","handleRollback","isLoading","Skeleton_default","ListItemSecondaryAction","Train_default","Undo_default","fetchDeploys","listDeployments","per_page","fetchTags","_ref6","listTags","fetchStatus","deploymentId","_ref7","_ref8","_ref9","listDeploymentStatuses","deployment_id","setDeployments","_React$useState3","_React$useState4","setStatus","_React$useState5","_React$useState6","tags","setTags","useParams","io","on","body","deployment_status","prevStatus","prevDeploys","deploys","previousState","orderedDeployments","_status$deployments$","_sortArrayWithDates$","currentDeployStatus","marginBottom","separator","ChevronRight_default","fontSize","Delete_default","remove","Grid","justify","item","xs","md","components_DeployActions","createDeployment","prevVersion","_context5","commit","sha","auto_merge","components_DeployList","createMuiTheme","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","text","contrastText","ThemeProvider","components_Menu","react_router","exact","path","args","views_Login","views_Dashboard","MainIsLoaded","Login","AppDetails","INITIAL_STATE","combineReducers","action","Octokit","store","createStore","reducers","applyMiddleware","reduxThunk","rrfProps","userProfile","ReactDOM","render","es","react_redux_firebase_es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.3fa66dc8.chunk.js","sourcesContent":["// API CALLS\nexport const BEGIN_API_CALL = 'BEGIN_API_CALL'\nexport const API_CALL_ERROR = 'API_CALL_ERROR'\n\n// SIGN UP\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\nexport const SIGNUP_ERROR = 'SIGNUP_ERROR'\n\n// SIGN IN\nexport const SIGNIN_SUCCESS = 'SIGNIN_SUCCESS'\nexport const SIGNIN_ERROR = 'SIGNIN_ERROR'\nexport const EMAIL_NOT_VERIFIED = 'EMAIL_NOT_VERIFIED'\n\n// SIGN OUT\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\nexport const SIGNOUT_ERROR = 'SIGNOUT_ERROR'\n\n// RESET PASSWORD\nexport const RESET_SUCCESS = 'RESET_SUCCESS'\nexport const RESET_ERROR = 'RESET_ERROR'\n\nexport const LOAD_OCTOKIT = 'LOAD_OCTOKIT'\n","import { BEGIN_API_CALL, API_CALL_ERROR } from \"./actionTypes\";\n\nexport function beginApiCall() {\n  return { type: BEGIN_API_CALL };\n}\n\nexport function apiCallError() {\n  return { type: API_CALL_ERROR };\n}\n","// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport firebase from 'firebase/app'\n\n// Add the Firebase services that you want to use\n// We only want to use Firebase Auth here\nimport 'firebase/database'\nimport 'firebase/auth'\n\n// Your app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n}\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\n\n// Finally, export it to use it throughout your app\nexport default firebase\n","import {\n  SIGNUP_SUCCESS,\n  SIGNUP_ERROR,\n  SIGNIN_SUCCESS,\n  SIGNIN_ERROR,\n  EMAIL_NOT_VERIFIED,\n  SIGNOUT_SUCCESS,\n  SIGNOUT_ERROR,\n  RESET_SUCCESS,\n  RESET_ERROR,\n  LOAD_OCTOKIT,\n} from './actionTypes'\nimport { beginApiCall, apiCallError } from './apiStatus'\nimport firebase from '../../services/firebase'\n\nexport const loadOctokit = token => {\n  return {\n    type: LOAD_OCTOKIT,\n    payload: token,\n  }\n}\n\n// Signing up with Firebase\nexport const signup = (email, password) => async dispatch => {\n  try {\n    dispatch(beginApiCall())\n    await firebase.auth().createUserWithEmailAndPassword(email, password)\n\n    await firebase.auth().onAuthStateChanged(user => {\n      user.sendEmailVerification()\n    })\n\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        firebase\n          .database()\n          .ref('users/' + user.uid)\n          .set({\n            displayName: user.displayName,\n            photoURL: user.photoURL,\n            emailVerified: user.emailVerified,\n            phoneNumber: user.phoneNumber,\n            isAnonymous: user.isAnonymous,\n            email: user.email,\n          })\n        // Sign up successful\n        dispatch({\n          type: SIGNUP_SUCCESS,\n          payload:\n            'Your account was successfully created! Now you need to verify your e-mail address, please go check your inbox.',\n        })\n      } else {\n        // Signup failed\n        dispatch({\n          type: SIGNUP_ERROR,\n          payload:\n            \"Something went wrong, we couldn't create your account. Please try again.\",\n        })\n      }\n    })\n  } catch (err) {\n    dispatch(apiCallError())\n    dispatch({\n      type: SIGNUP_ERROR,\n      payload:\n        \"Something went wrong, we couldn't create your account. Please try again.\",\n    })\n  }\n}\n\n// Signing in with Firebase\nexport const signin = (email, password, callback) => async dispatch => {\n  try {\n    dispatch(beginApiCall())\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(({ user }) => {\n        firebase\n          .database()\n          .ref('users/' + user.uid)\n          .set({\n            displayName: user.displayName,\n            photoURL: user.photoURL,\n            emailVerified: user.emailVerified,\n            phoneNumber: user.phoneNumber,\n            isAnonymous: user.isAnonymous,\n            email: email,\n          })\n\n        if (user.emailVerified) {\n          console.log('IF', user.emailVerified)\n          dispatch({ type: SIGNIN_SUCCESS })\n          callback()\n        } else {\n          console.log('ELSE', user.emailVerified)\n          dispatch({\n            type: EMAIL_NOT_VERIFIED,\n            payload: \"You haven't verified your e-mail address.\",\n          })\n        }\n      })\n      .catch(() => {\n        dispatch(apiCallError())\n        dispatch({\n          type: SIGNIN_ERROR,\n          payload: 'Invalid login credentials',\n        })\n      })\n  } catch (err) {\n    dispatch(apiCallError())\n    dispatch({ type: SIGNIN_ERROR, payload: 'Invalid login credentials' })\n  }\n}\n\n// Signing out with Firebase\nexport const signout = () => async dispatch => {\n  try {\n    dispatch(beginApiCall())\n\n    await firebase.auth().signOut()\n\n    dispatch({ type: SIGNOUT_SUCCESS })\n  } catch (err) {\n    dispatch(apiCallError())\n    dispatch({\n      type: SIGNOUT_ERROR,\n      payload: 'Error, we were not able to log you out. Please try again.',\n    })\n  }\n}\n\n// Reset password with Firebase\nexport const resetPassword = email => async dispatch => {\n  try {\n    dispatch(beginApiCall())\n\n    await firebase.auth().sendPasswordResetEmail(email)\n\n    dispatch({\n      type: RESET_SUCCESS,\n      payload:\n        \"Check your inbox. We've sent you a secured reset link by e-mail.\",\n    })\n  } catch (err) {\n    dispatch(apiCallError())\n    dispatch({ type: RESET_ERROR, payload: err })\n  }\n}\n","import { useState, useEffect } from 'react'\n\nconst useForm = (loginFunction, validate, isReset) => {\n  const [errors, setErrors] = useState({})\n  const [credentials, setCredentials] = useState({ email: '', password: '' })\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  useEffect(() => {\n    // Checking if any error occurred during validation\n    // and if a form is still submitting\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      // If no errors and form still haven't been submitted\n      // We sign up or in the user according to the login function passed\n      loginFunction()\n\n      // Cleaning inputs after signup/in\n      setCredentials({ email: '', password: '' })\n\n      // Now that the form has been submitted we set isSubmitting back to false\n      // This prevents the form being submitted again and again each time useEffect is activated\n      setIsSubmitting(false)\n    }\n  }, [errors, isReset, isSubmitting, loginFunction])\n\n  const handleSubmit = e => {\n    if (e) e.preventDefault()\n    setIsSubmitting(true)\n\n    // Checking credentials for validation\n    // And passing validate output (which return eventual errors) into setErrors\n    setErrors(validate(credentials, isReset))\n  }\n\n  const handleChange = e => {\n    e.persist()\n    setCredentials(credentials => ({\n      ...credentials,\n      [e.target.name]: e.target.value,\n    }))\n  }\n\n  return [credentials, handleChange, handleSubmit, errors]\n}\n\nexport default useForm\n","export default function validate(credentials, isReset) {\n  let errors = {}\n\n  // Checking if email is not empty\n  if (!credentials.email) {\n    errors.emailIsEmpty = 'You need to enter your e-mail address'\n  }\n  // Checking if email format is valid\n  if (credentials.email && !/\\S+@\\S+\\.\\S+/.test(credentials.email)) {\n    errors.emailFormatInvalid = \"Your e-mail format doesn't seem right\"\n  }\n\n  // Don't check password if user is resetting password\n  if (!isReset) {\n    // Checking if password is not empty\n    if (!credentials.password) {\n      errors.passIsEmpty = 'You need a password'\n    }\n    // Checking if password is strong enough\n    let strengthCheck = /^(?=.*[A-Z])(?=.*[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~])(?=.*[0-9])(?=.*[a-z]).{8,250}$/\n    if (credentials.password && !credentials.password.match(strengthCheck))\n      errors.passIsStrong = 'You need a stronger password'\n  }\n\n  return errors\n}\n","import React, { useState } from 'react'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport VpnKeyIcon from '@material-ui/icons/VpnKey'\nimport {\n  FormGroup,\n  makeStyles,\n  Button,\n  Divider,\n  CircularProgress,\n} from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport { signup, signin, resetPassword, signout } from '../store/actions/auth'\nimport useForm from '../utils/useForm'\nimport validate from '../utils/validateLoginForm'\nimport {\n  Box,\n  Typography,\n  Card,\n  InputAdornment,\n  TextField,\n} from '@material-ui/core'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport { useFirebase } from 'react-redux-firebase'\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    paddingBottom: theme.spacing(4),\n  },\n  divider: {\n    position: 'relative',\n    overflow: 'visible',\n    '&:after': {\n      content: '\"Or\"',\n      color: '#8b6baf',\n      position: 'absolute',\n      background: 'white',\n      padding: '0 20px',\n      top: '-11px',\n      left: '50%',\n      transform: 'translateX(-50%)',\n    },\n  },\n}))\n\nconst Login = ({\n  signup,\n  signin,\n  resetPassword,\n  authMsg,\n  history,\n  loading,\n  userId,\n}) => {\n  const classes = useStyles()\n  const [newUser, setNewUser] = useState(false)\n  const [reset, SetReset] = useState(false)\n  const firebase = useFirebase()\n  const [credentials, handleChange, handleSubmit, errors] = useForm(\n    login,\n    validate,\n    reset\n  )\n\n  function login() {\n    if (newUser) {\n      // signup\n      signup(credentials.email, credentials.password)\n    } else {\n      if (reset) {\n        // reset password\n        resetPassword(credentials.email)\n      } else {\n        // signin\n        signin(credentials.email, credentials.password, () => history.push('/'))\n      }\n    }\n  }\n\n  const handleGithubConnection = async () => {\n    const response = await firebase.login({\n      provider: 'github',\n      type: 'popup',\n      scopes: ['repo_deployment', 'admin:repo_hook'],\n    })\n\n    return firebase.updateProfile({\n      ...response.additionalUserInfo,\n      accessToken: response.credential.accessToken,\n    })\n  }\n\n  return (\n    <Box\n      style={{ background: 'linear-gradient(to bottom,#654a86,#534292)' }}\n      height=\"100vh\"\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Card>\n        <Box p={6}>\n          <Box pb={3} width=\"380px\">\n            <Typography color=\"secondary\" variant=\"h6\">\n              {reset\n                ? 'Reset password'\n                : newUser\n                ? 'Create an account'\n                : 'Sign in to your account'}\n            </Typography>\n          </Box>\n          <Button\n            onClick={handleGithubConnection}\n            variant=\"contained\"\n            color=\"secondary\"\n            startIcon={<GitHubIcon />}\n          >\n            Sign in with GitHub\n          </Button>\n          <Box paddingY={5}>\n            <Divider className={classes.divider} />\n          </Box>\n          {authMsg && <p className=\"auth-message\">{authMsg}</p>}\n          <form onSubmit={handleSubmit} noValidate>\n            <Box pb={4}>\n              {/* Email */}\n              <FormGroup className={classes.form}>\n                <TextField\n                  error={errors.emailIsEmpty || errors.emailFormatInvalid}\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email address\"\n                  helperText={\n                    (errors && errors.emailIsEmpty) ||\n                    (errors && errors.emailFormatInvalid)\n                  }\n                  defaultValue={credentials.email}\n                  onChange={handleChange}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <AccountCircle color=\"secondary\" />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </FormGroup>\n\n              {/* PASSWORD */}\n              {!reset && (\n                <FormGroup>\n                  <TextField\n                    error={errors.passIsStrong || errors.passIsEmpty}\n                    id=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={handleChange}\n                    defaultValue={credentials.password}\n                    helperText={\n                      (errors && errors.passIsStrong) ||\n                      (errors && errors.passIsEmpty)\n                    }\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <VpnKeyIcon color=\"secondary\" />\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </FormGroup>\n              )}\n            </Box>\n\n            {/* BUTTONS */}\n            <Box display=\"flex\" justifyContent=\"space-between\">\n              <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n                {loading ? (\n                  <CircularProgress color=\"secondary\" />\n                ) : reset ? (\n                  'Reset password'\n                ) : newUser ? (\n                  'Create account'\n                ) : (\n                  'Sign in'\n                )}\n              </Button>\n              {!newUser && !reset && (\n                <Button variant=\"text\" onClick={() => SetReset(true)}>\n                  Forgot password?\n                </Button>\n              )}\n              {reset && (\n                <Button variant=\"contained\" onClick={() => SetReset(false)}>\n                  Back to sign in\n                </Button>\n              )}\n            </Box>\n          </form>\n        </Box>\n        <Box\n          p={4}\n          display=\"flex\"\n          bgcolor=\"primary.light\"\n          alignItems=\"center\"\n          borderTop={`1px solid #dddddd`}\n          justifyContent=\"space-between\"\n        >\n          <Typography component=\"span\" color=\"secondary\">\n            {newUser ? 'Already have an account?' : 'New to shinkansen?'}\n          </Typography>\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => {\n              setNewUser(!newUser)\n              if (reset) SetReset(false)\n            }}\n          >\n            {newUser ? 'Sign in' : 'Create an account'}\n          </Button>\n        </Box>\n      </Card>\n    </Box>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userId: state.firebaseReducer.auth.uid,\n    authMsg: state.authReducer.authMsg,\n    loading: state.apiStatusReducer.apiCallsInProgress > 0,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signup: (email, password) => dispatch(signup(email, password)),\n    signin: (email, password, callback) =>\n      dispatch(signin(email, password, callback)),\n    signout: () => dispatch(signout()),\n    resetPassword: email => dispatch(resetPassword(email)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport MenuMui from '@material-ui/core/Menu'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport { connect } from 'react-redux'\nimport { signout } from '../store/actions/auth'\n\nconst useStyles = makeStyles(theme => ({\n  menu: {\n    boxShadow: 'none',\n    borderBottom: `2px solid ${theme.palette.secondary.main}`,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'block',\n  },\n  sectionDesktop: {\n    display: 'flex',\n    marginLeft: 'auto',\n  },\n}))\n\nconst Menu = ({ signout }) => {\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const isMenuOpen = Boolean(anchorEl)\n\n  const handleProfileMenuOpen = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n\n  const onLoggout = () => {\n    setAnchorEl(null)\n    signout()\n  }\n\n  const menuId = 'primary-search-account-menu'\n  const renderMenu = (\n    <MenuMui\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      color=\"secondary\"\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={onLoggout}>Logout</MenuItem>\n    </MenuMui>\n  )\n\n  return (\n    <AppBar className={classes.menu} position=\"sticky\">\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          className={classes.menuButton}\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography className={classes.title} variant=\"h6\" noWrap>\n          Shinkansen\n        </Typography>\n        <div className={classes.sectionDesktop}>\n          <IconButton\n            edge=\"end\"\n            aria-label=\"account of current user\"\n            aria-controls={menuId}\n            aria-haspopup=\"true\"\n            onClick={handleProfileMenuOpen}\n            color=\"inherit\"\n          >\n            <AccountCircle />\n          </IconButton>\n        </div>\n      </Toolbar>\n      {renderMenu}\n    </AppBar>\n  )\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signout: () => dispatch(signout()),\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Menu)\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nexport default ChildComponent => {\n  const ComposedComponent = props => {\n    useEffect(() => {\n      if (props.auth.isLoaded && props.auth.isEmpty) props.history.push(\"/\");\n    }, [props.auth, props.history]);\n\n    return <ChildComponent {...props} />;\n  };\n\n  function mapStateToProps(state) {\n    return {\n      auth: state.firebaseReducer.auth\n    };\n  }\n\n  return connect(mapStateToProps)(ComposedComponent);\n};\n","import React from 'react'\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined'\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined'\nimport { useFirebase } from 'react-redux-firebase'\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  makeStyles,\n  Container,\n  Button,\n  CircularProgress,\n} from '@material-ui/core'\n\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '600px',\n    height: '400px',\n    overflow: 'scroll',\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.background.paper,\n  },\n  listItem: {\n    '&:hover': {\n      cursor: 'initial',\n      backgroundColor: 'transparent',\n    },\n  },\n  container: {\n    display: 'flex',\n    padding: '10px 0px',\n    alignItems: 'center',\n  },\n  checkedIcon: {\n    fill: '#30ae43',\n  },\n}))\n\nconst GithubSearch = ({ auth, profile, username, connectedApps, octokit }) => {\n  const [repos, setRepos] = React.useState([])\n  const firebase = useFirebase()\n  const classes = useStyles()\n\n  React.useEffect(() => {\n    const getRepos = async () => {\n      const { data } = await octokit.repos.list({ sort: 'updated' })\n\n      setRepos(data)\n    }\n    getRepos()\n  }, [octokit.repos])\n\n  const handleListItemClick = repo => {\n    firebase.push(`applications/${auth.uid}`, repo)\n    octokit.repos.createHook({\n      owner: profile.username,\n      repo: repo.name,\n      events: ['deployment', 'deployment_status'],\n      config: {\n        url: `${process.env.REACT_APP_SERVER_DOMAIN}/`,\n        content_type: 'json',\n        secret: 'bonjour',\n      },\n    })\n  }\n\n  return (\n    <List className={classes.root} component=\"nav\">\n      {!repos.length ? (\n        <CircularProgress color=\"secondary\" />\n      ) : (\n        repos.map(repo => {\n          const isConnected = connectedApps.some(({ id }) => id === repo.id)\n          return (\n            <ListItem\n              key={repo.name}\n              divider\n              className={classes.listItem}\n              button\n            >\n              <Container className={classes.container} maxWidth=\"lg\">\n                <ListItemIcon>\n                  {isConnected ? (\n                    <CheckCircleOutlineOutlinedIcon\n                      className={classes.checkedIcon}\n                    />\n                  ) : (\n                    <BookOutlinedIcon color=\"secondary\" />\n                  )}\n                </ListItemIcon>\n                <ListItemText primary={`${username}/${repo.name}`} />\n                <Button\n                  disabled={isConnected}\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={() => handleListItemClick(repo)}\n                >\n                  {isConnected ? 'Connected' : 'Connect'}\n                </Button>\n              </Container>\n            </ListItem>\n          )\n        })\n      )}\n    </List>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.firebaseReducer.auth,\n    profile: state.firebaseReducer.profile,\n    username: state.firebaseReducer?.profile?.username,\n    octokit: state.octokitReducer.octokit,\n  }\n}\n\nexport default connect(mapStateToProps)(GithubSearch)\n","import React from 'react'\nimport Popper from '@material-ui/core/Popper'\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore'\nimport { useFirebaseConnect } from 'react-redux-firebase'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\nimport requireAuth from '../components/hoc/requireAuth'\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  makeStyles,\n  Container,\n  Box,\n  Button,\n  InputBase,\n  Card,\n  Breadcrumbs,\n} from '@material-ui/core'\nimport { Link } from 'react-router-dom'\n\nimport LensIcon from '@material-ui/icons/Lens'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { compose } from 'redux'\nimport { connect, useSelector } from 'react-redux'\nimport GithubSearch from '../components/GithubSearch'\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  listItem: {\n    '&:hover': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link: {\n    textDecoration: 'none',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('lg')]: {\n      width: 200,\n    },\n  },\n  search: {\n    position: 'sticky',\n    background: 'transparent',\n    top: 0,\n    borderRadius: theme.shape.borderRadius,\n    border: `1px solid ${theme.palette.primary.dark}`,\n    width: '100%',\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}))\n\nconst Dashboard = ({ auth, history }) => {\n  useFirebaseConnect([`applications/${auth.uid}`])\n  const applications = useSelector(\n    ({ firebaseReducer: { data } }) =>\n      data.applications && data.applications[auth.uid]\n  )\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const applicationsArray = applications\n    ? Object.entries(applications).reduce((acc, [index, application]) => {\n        return [\n          ...acc,\n          {\n            ...application,\n            uid: index,\n          },\n        ]\n      }, [])\n    : []\n\n  const classes = useStyles()\n\n  const addSampleTodo = event => {\n    setAnchorEl(anchorEl ? null : event.currentTarget)\n  }\n\n  const handleListItemClick = ({ uid }) => {\n    history.push(`/application/${uid}`)\n  }\n\n  const open = Boolean(anchorEl)\n  const id = open ? 'simple-popper' : undefined\n\n  return (\n    <>\n      <Box bgcolor=\"primary.light\" p={2}>\n        <Container maxWidth=\"lg\">\n          <Box display=\"flex\" alignItems=\"center\">\n            <Breadcrumbs>\n              <Link to=\"/\" className={classes.link}>\n                <AccountCircleIcon className={classes.icon} />\n                Personnal\n              </Link>\n            </Breadcrumbs>\n            <Box marginLeft=\"auto\">\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                onClick={addSampleTodo}\n                endIcon={<UnfoldMoreIcon />}\n              >\n                New\n              </Button>\n              <Popper\n                id={id}\n                open={open}\n                placement=\"bottom-end\"\n                anchorEl={anchorEl}\n              >\n                <Card>\n                  <GithubSearch connectedApps={applicationsArray} />\n                </Card>\n              </Popper>\n            </Box>\n          </Box>\n        </Container>\n      </Box>\n      {!applicationsArray.length ? (\n        <Container>\n          <p>There's no connected app</p>\n        </Container>\n      ) : (\n        <>\n          <Box pt={6} pb={3}>\n            <Container maxWidth=\"lg\">\n              <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                  <SearchIcon />\n                </div>\n                <InputBase\n                  placeholder=\"Search…\"\n                  classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                  }}\n                  inputProps={{ 'aria-label': 'search' }}\n                />\n              </div>\n            </Container>\n          </Box>\n          <List\n            className={classes.root}\n            component=\"nav\"\n            aria-label=\"main mailbox folders\"\n          >\n            {applicationsArray.map(application => {\n              return (\n                <ListItem\n                  key={application.name}\n                  divider\n                  className={classes.listItem}\n                  button\n                  onClick={() => handleListItemClick(application)}\n                >\n                  <Container className={classes.container} maxWidth=\"lg\">\n                    <ListItemIcon>\n                      <LensIcon color=\"secondary\" />\n                    </ListItemIcon>\n                    <ListItemText primary={application.name} />\n                  </Container>\n                </ListItem>\n              )\n            })}\n          </List>\n        </>\n      )}\n    </>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.firebaseReducer.auth,\n  }\n}\n\nexport default compose(connect(mapStateToProps), requireAuth)(Dashboard)\n","export const sortArrayWithDates = (array, by = 'created_at') =>\n  array &&\n  array.sort((a, b) => new Date(b[by]).getTime() - new Date(a[by]).getTime())\n\nexport const currentDeployStatus = (status, deployments) =>\n  Object.keys(status).length &&\n  deployments.length &&\n  status[deployments[0].id]?.length &&\n  sortArrayWithDates(status[deployments[0].id])[0]?.state\n\nexport const isStatusLoading = status => {\n  const resolvedStatus = ['success', 'failure']\n\n  return !resolvedStatus.includes(status)\n}\n","import React from 'react'\nimport Skeleton from '@material-ui/lab/Skeleton'\nimport { Link } from 'react-router-dom'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport {\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Avatar,\n  makeStyles,\n} from '@material-ui/core'\nimport { isStatusLoading, sortArrayWithDates } from '../utils'\n\nconst useStyles = makeStyles(theme => ({\n  listItemIcon: {\n    minWidth: 'auto',\n    marginRight: theme.spacing(2),\n  },\n  inline: {\n    display: 'inline',\n  },\n  login: {\n    fontWeight: 500,\n  },\n  skeleton: {\n    width: '100px',\n    display: 'inline-flex !important',\n  },\n  loader: {\n    height: '10px',\n    width: '24px',\n  },\n  blueLink: {\n    color: '#006deb',\n    marginLeft: theme.spacing(0.5),\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}))\n\nconst DeployList = ({ status, deployments }) => {\n  const classes = useStyles()\n  return (\n    <List>\n      {deployments.map(deployment => {\n        const orderedStatus = sortArrayWithDates(\n          status[deployment.id],\n          'created_at'\n        )\n        const deployStatus = orderedStatus ? orderedStatus[0] || {} : {}\n        const options = {\n          year: 'numeric',\n          month: 'numeric',\n          day: 'numeric',\n          hour: 'numeric',\n          minute: 'numeric',\n          second: 'numeric',\n        }\n        const date = new Date(deployment.created_at)\n        const formattedDate = new Intl.DateTimeFormat('en-US', options).format(\n          date\n        )\n\n        const getStatusColor = status => {\n          switch (status) {\n            case 'success':\n              return {\n                icon: <CheckCircleIcon htmlColor=\"green\" />,\n                color: 'green',\n              }\n            case 'failure':\n              return { icon: <ErrorIcon color=\"error\" />, color: 'red' }\n            case 'pending':\n              return {\n                icon: (\n                  <LinearProgress\n                    className={classes.loader}\n                    color=\"secondary\"\n                  />\n                ),\n                color: 'gold',\n              }\n            default:\n              return {\n                icon: (\n                  <LinearProgress\n                    className={classes.loader}\n                    color=\"secondary\"\n                  />\n                ),\n                color: 'green',\n              }\n          }\n        }\n\n        return (\n          <ListItem key={deployment.id} divider alignItems=\"center\">\n            <ListItemIcon className={classes.listItemIcon}>\n              {getStatusColor(deployStatus.state).icon}\n            </ListItemIcon>\n            <ListItemAvatar>\n              <Avatar src={deployment.creator.avatar_url} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={\n                <>\n                  <Typography component=\"span\" className={classes.login}>\n                    {deployment.creator.login}:{' '}\n                  </Typography>\n                  {!deployStatus.state && (\n                    <Skeleton\n                      component=\"span\"\n                      className={classes.skeleton}\n                      animation=\"wave\"\n                    />\n                  )}\n                  {deployStatus.state && (\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      className={classes.inline}\n                      style={{\n                        color: getStatusColor(deployStatus.state).color,\n                      }}\n                    >\n                      Build {deployStatus.state}\n                    </Typography>\n                  )}\n                </>\n              }\n              secondary={\n                <>\n                  <span>{formattedDate}</span>\n                  {!isStatusLoading(deployStatus.state) && (\n                    <Link\n                      to=\"/\"\n                      className={classes.blueLink}\n                      onClick={() => {\n                        console.info(\"I'm a button.\")\n                      }}\n                    >\n                      View build log\n                    </Link>\n                  )}\n                </>\n              }\n            />\n          </ListItem>\n        )\n      })}\n    </List>\n  )\n}\n\nexport default DeployList\n","import React from 'react'\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Button,\n  makeStyles,\n  ListItemSecondaryAction,\n} from '@material-ui/core'\nimport TrainIcon from '@material-ui/icons/Train'\nimport UndoIcon from '@material-ui/icons/Undo'\nimport Skeleton from '@material-ui/lab/Skeleton/Skeleton'\n\nconst useStyles = makeStyles(theme => ({\n  listItemIcon: {\n    minWidth: 'auto',\n    marginRight: theme.spacing(2),\n  },\n  inline: {\n    display: 'inline',\n  },\n  skeleton: {\n    display: 'inline-flex',\n    width: '100px',\n  },\n  tag: {\n    background: theme.palette.primary.dark,\n    borderRadius: '4px',\n    padding: '4px 8px',\n  },\n}))\n\nconst DeployActions = ({\n  currentVersion,\n  previousVersion,\n  handleDeploy,\n  handleRollback,\n  isLoading,\n}) => {\n  const classes = useStyles()\n  return (\n    <List component=\"nav\" aria-label=\"main mailbox folders\">\n      <ListItem divider={Boolean(previousVersion)} alignItems=\"center\">\n        {!currentVersion && (\n          <ListItemText>\n            <Skeleton className={classes.skeleton} animation=\"wave\" />\n          </ListItemText>\n        )}\n        {currentVersion && currentVersion.name && (\n          <ListItemText>\n            <>\n              Current version{' '}\n              <span className={classes.tag}>{currentVersion.name}</span>\n            </>\n          </ListItemText>\n        )}\n        <ListItemSecondaryAction>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={isLoading}\n            endIcon={<TrainIcon />}\n            onClick={handleDeploy}\n          >\n            Deploy new version\n          </Button>\n        </ListItemSecondaryAction>\n      </ListItem>\n      <ListItem alignItems=\"center\">\n        {!previousVersion && (\n          <ListItemText>\n            <Skeleton className={classes.skeleton} animation=\"wave\" />\n          </ListItemText>\n        )}\n        {previousVersion && previousVersion.name && (\n          <ListItemText>\n            <>\n              Previous version{' '}\n              <span className={classes.tag}>{previousVersion.name}</span>\n            </>\n          </ListItemText>\n        )}\n        <ListItemSecondaryAction>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<UndoIcon />}\n            disabled={isLoading || !previousVersion}\n            onClick={handleRollback}\n          >\n            Rollback\n          </Button>\n        </ListItemSecondaryAction>\n      </ListItem>\n    </List>\n  )\n}\n\nexport default DeployActions\n","export const fetchDeploys = async (octokit, { username }, { name }) => {\n  const { data } = await octokit.repos.listDeployments({\n    owner: username,\n    repo: name,\n    per_page: 9,\n  })\n\n  return data\n}\n\nexport const fetchTags = async (octokit, { username }, { name }) => {\n  const { data } = await octokit.repos.listTags({\n    owner: username,\n    repo: name,\n  })\n\n  return data\n}\n\nexport const fetchStatus = async (\n  deploymentId,\n  octokit,\n  { username },\n  { name }\n) => {\n  const { data } = await octokit.repos.listDeploymentStatuses({\n    owner: username,\n    repo: name,\n    deployment_id: deploymentId,\n  })\n\n  return data\n}\n","import React from 'react'\nimport GitHubIcon from '@material-ui/icons/GitHub'\n\nimport io from 'socket.io-client'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\n\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\n\nimport {\n  Container,\n  Box,\n  makeStyles,\n  Breadcrumbs,\n  Typography,\n  Button,\n  Grid,\n  Card,\n} from '@material-ui/core'\nimport { useParams, Link } from 'react-router-dom'\nimport { useFirebaseConnect, useFirebase } from 'react-redux-firebase'\nimport { useSelector, connect } from 'react-redux'\nimport { compose } from 'redux'\nimport requireAuth from '../components/hoc/requireAuth'\nimport DeployList from '../components/DeployList'\nimport DeployActions from '../components/DeployActions'\nimport {\n  currentDeployStatus,\n  isStatusLoading,\n  sortArrayWithDates,\n} from '../utils'\nimport { fetchDeploys, fetchTags, fetchStatus } from './helpers'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  link: {\n    textDecoration: 'none',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  blueLink: {\n    color: '#006deb',\n    marginLeft: theme.spacing(0.5),\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}))\n\nconst ApplicationPage = ({ auth, profile, octokit, history }) => {\n  const classes = useStyles()\n  const firebase = useFirebase()\n  const [deployments, setDeployments] = React.useState([])\n  const [status, setStatus] = React.useState({})\n  const [tags, setTags] = React.useState([])\n\n  let { uid } = useParams()\n\n  useFirebaseConnect([`applications/${auth.uid}/${uid}`])\n\n  const application = useSelector(\n    ({ firebaseReducer: { data } }) =>\n      data.applications &&\n      data.applications[auth.uid] &&\n      data.applications[auth.uid][uid]\n  )\n\n  const currentVersion = tags[0] || null\n  const previousVersion = tags[1] || null\n\n  React.useEffect(() => {\n    const socket = io.connect(process.env.REACT_APP_SERVER_DOMAIN)\n    socket.on('event', function({ body }) {\n      const { deployment, deployment_status } = body\n      if (deployment && !deployment_status) {\n        setDeployments(prevDeploys => [...prevDeploys, body.deployment])\n        return\n      }\n\n      setStatus(prevStatus => {\n        if (!prevStatus) {\n          return\n        }\n        return {\n          ...prevStatus,\n          [body.deployment.id]: [\n            ...prevStatus[body.deployment.id],\n            body.deployment_status,\n          ],\n        }\n      })\n    })\n  }, [])\n\n  React.useEffect(() => {\n    if (!application || !octokit) {\n      return\n    }\n    const deploys = async () => {\n      const deploys = await fetchDeploys(octokit, profile, application)\n      setDeployments(deploys)\n    }\n    const tags = async () => {\n      const tags = await fetchTags(octokit, profile, application)\n      setTags(tags)\n    }\n\n    deploys()\n    tags()\n  }, [application, octokit, profile, profile.username])\n\n  React.useEffect(() => {\n    const status = () => {\n      deployments.map(async ({ id }) => {\n        const status = await fetchStatus(id, octokit, profile, application)\n\n        setStatus(previousState => ({\n          ...previousState,\n          [id]: status,\n        }))\n      })\n    }\n\n    status()\n    // eslint-disable-next-line\n  }, [deployments])\n\n  const handleDeploy = async () => {\n    await octokit.repos.createDeployment({\n      owner: profile.username,\n      repo: application.name,\n      ref: 'master',\n    })\n  }\n\n  const handleRollback = async () => {\n    const tags = await fetchTags(octokit, profile, application)\n    const prevVersion = tags[1]\n\n    octokit.repos.createDeployment({\n      owner: profile.username,\n      repo: application.name,\n      ref: prevVersion.commit.sha,\n      auto_merge: false,\n    })\n    setTags(tags)\n  }\n\n  const handleDelete = () => {\n    firebase.remove(`applications/${auth.uid}/${uid}`)\n    history.push('/')\n  }\n\n  const orderedDeployments = sortArrayWithDates(deployments)\n  const deployStatus = currentDeployStatus(status, orderedDeployments)\n  const isLoading = isStatusLoading(deployStatus)\n\n  return application ? (\n    <>\n      <Box bgcolor=\"primary.light\" p={2} marginBottom={6}>\n        <Container maxWidth=\"lg\">\n          <Box display=\"flex\" alignItems=\"center\">\n            <Breadcrumbs\n              separator={<ChevronRightIcon />}\n              aria-label=\"breadcrumb\"\n            >\n              <Link to=\"/\" className={classes.link}>\n                <Box display=\"flex\" marginRight={1}>\n                  <AccountCircleIcon />\n                </Box>\n                <Typography color=\"textPrimary\">Personnal</Typography>\n              </Link>\n              <Box display=\"flex\">\n                <Box display=\"flex\" marginRight={1}>\n                  <GitHubIcon fontSize=\"small\" />\n                </Box>\n                <Typography color=\"textPrimary\">{application.name}</Typography>\n              </Box>\n            </Breadcrumbs>\n            <Box marginLeft=\"auto\">\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                endIcon={<DeleteIcon />}\n                onClick={handleDelete}\n              >\n                Delete\n              </Button>\n            </Box>\n          </Box>\n        </Container>\n      </Box>\n      <Container maxWidth=\"lg\">\n        <Grid container justify=\"space-between\" spacing={6}>\n          <Grid item xs={12} md={6}>\n            <Box marginBottom={2}>\n              <Typography>Deployments commands</Typography>\n            </Box>\n            <Card>\n              <DeployActions\n                isLoading={isLoading}\n                currentVersion={currentVersion}\n                previousVersion={previousVersion}\n                handleDeploy={handleDeploy}\n                handleRollback={handleRollback}\n              />\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography>Deployments activity</Typography>\n            <DeployList status={status} deployments={orderedDeployments} />\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  ) : null\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.firebaseReducer.auth,\n    profile: state.firebaseReducer.profile,\n    octokit: state.octokitReducer.octokit,\n  }\n}\n\nexport default compose(connect(mapStateToProps), requireAuth)(ApplicationPage)\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Login from '../views/Login'\nimport Menu from './Menu'\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  CircularProgress,\n} from '@material-ui/core'\nimport Dashboard from '../views/Dashboard'\nimport AppDetails from '../views/AppDetails'\nimport { connect, useSelector } from 'react-redux'\nimport { isLoaded, isEmpty } from 'react-redux-firebase'\nimport { loadOctokit } from '../store/actions/auth'\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Helvetica',\n    fontWeightLight: 300,\n    fontWeightRegular: 300,\n    fontWeightMedium: 300,\n    fontWeightBold: 300,\n  },\n  palette: {\n    text: { primary: '#62738d' },\n    primary: {\n      main: '#ffffff',\n      light: '#f7f8fb',\n      dark: '#e7ebf3',\n      contrastText: '#8b6baf',\n    },\n    secondary: {\n      main: '#8b6baf',\n      contrastText: '#e7ebf3',\n    },\n  },\n})\n\nconst MainIsLoaded = (args, auth) => {\n  if (!isLoaded(auth)) {\n    return <CircularProgress color=\"secondary\" />\n  }\n\n  return !isEmpty(auth) ? <Dashboard {...args} /> : <Login {...args} />\n}\nconst App = ({ profile, loadOctokit }) => {\n  React.useEffect(() => {\n    if (!profile.accessToken) {\n      return\n    }\n    loadOctokit(profile.accessToken)\n  }, [profile, loadOctokit])\n  const auth = useSelector(state => state.firebaseReducer.auth)\n\n  return (\n    <ThemeProvider theme={theme}>\n      {isLoaded(auth) && !isEmpty(auth) && <Menu />}\n      <Switch>\n        <Route exact path=\"/\" component={args => MainIsLoaded(args, auth)} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/application/:uid\" component={AppDetails} />\n      </Switch>\n    </ThemeProvider>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    profile: state.firebaseReducer.profile,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadOctokit: token => dispatch(loadOctokit(token, dispatch)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import {\n  SIGNUP_SUCCESS,\n  SIGNUP_ERROR,\n  SIGNIN_SUCCESS,\n  SIGNIN_ERROR,\n  EMAIL_NOT_VERIFIED,\n  SIGNOUT_SUCCESS,\n  SIGNOUT_ERROR,\n  RESET_SUCCESS,\n  RESET_ERROR,\n} from '../actions/actionTypes'\n\nconst INITIAL_STATE = {\n  authMsg: '',\n}\n\nexport default function(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SIGNIN_SUCCESS:\n      return { ...state, authMsg: '' }\n    case SIGNOUT_SUCCESS:\n      return { ...state, authMsg: '' }\n    case SIGNUP_SUCCESS:\n      return { ...state, authMsg: action.payload }\n    case SIGNUP_ERROR:\n      return { ...state, authMsg: action.payload }\n    case SIGNIN_ERROR:\n      return { ...state, authMsg: action.payload }\n    case EMAIL_NOT_VERIFIED:\n      return { ...state, authMsg: action.payload }\n    case SIGNOUT_ERROR:\n      return { ...state, authMsg: action.payload }\n    case RESET_SUCCESS:\n      return { ...state, authMsg: action.payload }\n    case RESET_ERROR:\n      return { ...state, authMsg: action.payload }\n    default:\n      return state\n  }\n}\n","import {\n  BEGIN_API_CALL,\n  API_CALL_ERROR,\n  SIGNIN_SUCCESS,\n  SIGNUP_SUCCESS,\n  RESET_SUCCESS,\n  SIGNOUT_SUCCESS,\n} from '../actions/actionTypes'\n\nconst INITIAL_STATE = {\n  apiCallsInProgress: 0,\n}\n\nexport default function apiCallStatusReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case BEGIN_API_CALL:\n      return { ...state, apiCallsInProgress: 1 }\n    case API_CALL_ERROR:\n      return { ...state, apiCallsInProgress: 0 }\n    case SIGNIN_SUCCESS:\n      return { ...state, apiCallsInProgress: 0 }\n    case SIGNUP_SUCCESS:\n      return { ...state, apiCallsInProgress: 0 }\n    case RESET_SUCCESS:\n      return { ...state, apiCallsInProgress: 0 }\n    case SIGNOUT_SUCCESS:\n      return { ...state, apiCallsInProgress: 0 }\n    default:\n      return state\n  }\n}\n","import { LOAD_OCTOKIT } from '../actions/actionTypes'\nimport Octokit from '@octokit/rest'\n\nconst INITIAL_STATE = {}\n\nexport default function(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case LOAD_OCTOKIT:\n      const octokit = new Octokit({\n        auth: action.payload,\n      })\n      return { ...state, octokit }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { firebaseReducer } from 'react-redux-firebase'\nimport authReducer from './auth'\nimport apiStatusReducer from './apiStatus'\nimport octokitReducer from './octokit'\n\nexport default combineReducers({\n  firebaseReducer,\n  authReducer,\n  octokitReducer,\n  apiStatusReducer,\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport reducers from './reducers'\n\n// ENHANCING STORE WITH FIREBASE\n\nconst store = createStore(reducers, {}, compose(applyMiddleware(reduxThunk)))\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './components/App'\n\n// SETTING UP REDUX STORE\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport firebase from './services/firebase'\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\n\nconst rrfConfig = {\n  userProfile: 'users',\n}\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <Router>\n        <App />\n      </Router>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}